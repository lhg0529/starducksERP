name: Deploy to EC2

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build with Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew clean build -x test
        # working-directory: ./path/to/your/project # Gradle 프로젝트 경로 설정

      - name: Copy JAR file to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }} 
          username: ${{ secrets.USERNAME }} 
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          source: "./build/libs/*.jar" 
          target: "/home/ubuntu/starducksERP/build/libs"


      - name: Restart Application on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            # 기존 Java 애플리케이션 프로세스 종료
            pkill -f 'starducks-0.0.1-SNAPSHOT.jar'

            # 새 애플리케이션 JAR 파일로 애플리케이션 시작
            nohup java -jar /home/ubuntu/starducksERP/build/libs/starducks-0.0.1-SNAPSHOT.jar > /home/ubuntu/starducksERP.log 2>&1 &

      

      # - name: SSH into EC2 and restart application
      #   uses: appleboy/ssh-action@v1.0.3
      #   with:
      #     host: ${{ secrets.EC2_HOST }} 
      #     username: ${{ secrets.USERNAME }} 
      #     key: ${{ secrets.SSH_PRIVATE_KEY }}
      #     port: 22
      #     script: |
      #       cd /path/on/ec2/
      #       sudo systemctl stop your-app.service # 서비스 이름에 .service 추가
      #       mv your-app.jar your-app-old.jar # 백업 파일명 변경
      #       mv *.jar your-app.jar # 새로운 JAR 파일로 변경, 와일드카드 사용으로 변경
      #       sudo systemctl start your-app.service # 서비스 이름에 .service 추가
